{"ast":null,"code":"var _jsxFileName = \"/home/ivan/\\xC1rea de Trabalho/t8/t08_p11_trackit/src/components/today/Today.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useContext } from \"react\";\nimport { Container, Date, Habits, Text } from \"./TodayStyled\";\nimport TodayHabitsContext from \"../../contexts/TodayHabitsContext\";\nimport Footer from \"../Footer\";\nimport TodayHabit from \"./TodayHabit\";\nimport UserContext from \"../../contexts/UserContext\";\nimport Header from \"../Header\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Today() {\n  _s();\n\n  const {\n    todayHabits,\n    setTodayHabits,\n    count,\n    setCount,\n    percentage,\n    setPercentage,\n    setTodayHabitsCount\n  } = useContext(TodayHabitsContext);\n  const {\n    userInfo\n  } = useContext(UserContext);\n  const config = {\n    headers: {\n      Authorization: `Bearer ${userInfo.token}`\n    }\n  };\n\n  require(\"dayjs/locale/pt-br\");\n\n  const date = dayjs().locale(\"pt-br\").format(\"dddd, DD/MM\");\n  useEffect(() => {\n    const URL = \"https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/today\";\n\n    if (userInfo.token) {\n      const promise = axios.get(URL, config);\n      promise.then(response => {\n        const {\n          data\n        } = response;\n        setTodayHabits(data);\n        setCount(data.filter(habit => habit.done).length);\n        setTodayHabitsCount(data.length);\n        setPercentage((count / data.length * 100).toFixed(0));\n      });\n      promise.catch(err => console.log(err.response));\n    }\n  }, [userInfo, count]);\n\n  function showTodayHabits() {\n    if (todayHabits) {\n      return /*#__PURE__*/_jsxDEV(Habits, {\n        children: todayHabits.map((habit, index) => {\n          const {\n            name,\n            done,\n            currentSequence,\n            highestSequence,\n            id\n          } = habit;\n          return /*#__PURE__*/_jsxDEV(TodayHabit, {\n            i: index,\n            name: name,\n            done: done,\n            current: currentSequence,\n            highest: highestSequence,\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Date, {\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      count: count,\n      children: count > 0 ? `${percentage}% dos hábitos concluídos` : \"Nenhum hábito concluído ainda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this), showTodayHabits(), /*#__PURE__*/_jsxDEV(Footer, {\n      percentage: percentage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Today, \"aIFo0Xlt/fR92e9mOwV21X69jcQ=\");\n\n_c = Today;\nexport default Today;\n\nvar _c;\n\n$RefreshReg$(_c, \"Today\");","map":{"version":3,"sources":["/home/ivan/Área de Trabalho/t8/t08_p11_trackit/src/components/today/Today.js"],"names":["useEffect","dayjs","useContext","Container","Date","Habits","Text","TodayHabitsContext","Footer","TodayHabit","UserContext","Header","axios","Today","todayHabits","setTodayHabits","count","setCount","percentage","setPercentage","setTodayHabitsCount","userInfo","config","headers","Authorization","token","require","date","locale","format","URL","promise","get","then","response","data","filter","habit","done","length","toFixed","catch","err","console","log","showTodayHabits","map","index","name","currentSequence","highestSequence","id"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AAEA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,IAAlC,QAA8C,eAA9C;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAChB,QAAM;AACLC,IAAAA,WADK;AAELC,IAAAA,cAFK;AAGLC,IAAAA,KAHK;AAILC,IAAAA,QAJK;AAKLC,IAAAA,UALK;AAMLC,IAAAA,aANK;AAOLC,IAAAA;AAPK,MAQFlB,UAAU,CAACK,kBAAD,CARd;AASA,QAAM;AAAEc,IAAAA;AAAF,MAAenB,UAAU,CAACQ,WAAD,CAA/B;AACA,QAAMY,MAAM,GAAG;AACdC,IAAAA,OAAO,EAAE;AACRC,MAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADhC;AADK,GAAf;;AAMAC,EAAAA,OAAO,CAAC,oBAAD,CAAP;;AACA,QAAMC,IAAI,GAAG1B,KAAK,GAAG2B,MAAR,CAAe,OAAf,EAAwBC,MAAxB,CAA+B,aAA/B,CAAb;AAEA7B,EAAAA,SAAS,CAAC,MAAM;AACf,UAAM8B,GAAG,GACR,yEADD;;AAGA,QAAIT,QAAQ,CAACI,KAAb,EAAoB;AACnB,YAAMM,OAAO,GAAGnB,KAAK,CAACoB,GAAN,CAAUF,GAAV,EAAeR,MAAf,CAAhB;AAEAS,MAAAA,OAAO,CAACE,IAAR,CAAcC,QAAD,IAAc;AAC1B,cAAM;AAAEC,UAAAA;AAAF,YAAWD,QAAjB;AACAnB,QAAAA,cAAc,CAACoB,IAAD,CAAd;AACAlB,QAAAA,QAAQ,CAACkB,IAAI,CAACC,MAAL,CAAaC,KAAD,IAAWA,KAAK,CAACC,IAA7B,EAAmCC,MAApC,CAAR;AACAnB,QAAAA,mBAAmB,CAACe,IAAI,CAACI,MAAN,CAAnB;AACApB,QAAAA,aAAa,CAAC,CAAEH,KAAK,GAAGmB,IAAI,CAACI,MAAd,GAAwB,GAAzB,EAA8BC,OAA9B,CAAsC,CAAtC,CAAD,CAAb;AACA,OAND;AAQAT,MAAAA,OAAO,CAACU,KAAR,CAAeC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACR,QAAhB,CAAvB;AACA;AACD,GAjBQ,EAiBN,CAACb,QAAD,EAAWL,KAAX,CAjBM,CAAT;;AAmBA,WAAS6B,eAAT,GAA2B;AAC1B,QAAI/B,WAAJ,EAAiB;AAChB,0BACC,QAAC,MAAD;AAAA,kBACEA,WAAW,CAACgC,GAAZ,CAAgB,CAACT,KAAD,EAAQU,KAAR,KAAkB;AAClC,gBAAM;AAAEC,YAAAA,IAAF;AAAQV,YAAAA,IAAR;AAAcW,YAAAA,eAAd;AAA+BC,YAAAA,eAA/B;AAAgDC,YAAAA;AAAhD,cAAuDd,KAA7D;AACA,8BACC,QAAC,UAAD;AACC,YAAA,CAAC,EAAEU,KADJ;AAEC,YAAA,IAAI,EAAEC,IAFP;AAGC,YAAA,IAAI,EAAEV,IAHP;AAIC,YAAA,OAAO,EAAEW,eAJV;AAKC,YAAA,OAAO,EAAEC,eALV;AAMC,YAAA,EAAE,EAAEC;AANL;AAAA;AAAA;AAAA;AAAA,kBADD;AAUA,SAZA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AAiBA;;AACD,wBAAO,qCAAP;AACA;;AAED,sBACC,QAAC,SAAD;AAAA,4BACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,IAAD;AAAA,gBAAOxB;AAAP;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEX,KAAb;AAAA,gBACEA,KAAK,GAAG,CAAR,GACG,GAAEE,UAAW,0BADhB,GAEE;AAHJ;AAAA;AAAA;AAAA;AAAA,YAHD,EAQE2B,eAAe,EARjB,eASC,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAE3B;AAApB;AAAA;AAAA;AAAA;AAAA,YATD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAaA;;GA3EQL,K;;KAAAA,K;AA6ET,eAAeA,KAAf","sourcesContent":["import { useEffect } from \"react\";\nimport dayjs from \"dayjs\";\nimport { useContext } from \"react\";\n\nimport { Container, Date, Habits, Text } from \"./TodayStyled\";\nimport TodayHabitsContext from \"../../contexts/TodayHabitsContext\";\nimport Footer from \"../Footer\";\nimport TodayHabit from \"./TodayHabit\";\nimport UserContext from \"../../contexts/UserContext\";\nimport Header from \"../Header\";\nimport axios from \"axios\";\n\nfunction Today() {\n\tconst {\n\t\ttodayHabits,\n\t\tsetTodayHabits,\n\t\tcount,\n\t\tsetCount,\n\t\tpercentage,\n\t\tsetPercentage,\n\t\tsetTodayHabitsCount,\n\t} = useContext(TodayHabitsContext);\n\tconst { userInfo } = useContext(UserContext);\n\tconst config = {\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${userInfo.token}`,\n\t\t},\n\t};\n\n\trequire(\"dayjs/locale/pt-br\");\n\tconst date = dayjs().locale(\"pt-br\").format(\"dddd, DD/MM\");\n\n\tuseEffect(() => {\n\t\tconst URL =\n\t\t\t\"https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/today\";\n\n\t\tif (userInfo.token) {\n\t\t\tconst promise = axios.get(URL, config);\n\n\t\t\tpromise.then((response) => {\n\t\t\t\tconst { data } = response;\n\t\t\t\tsetTodayHabits(data);\n\t\t\t\tsetCount(data.filter((habit) => habit.done).length);\n\t\t\t\tsetTodayHabitsCount(data.length);\n\t\t\t\tsetPercentage(((count / data.length) * 100).toFixed(0));\n\t\t\t});\n\n\t\t\tpromise.catch((err) => console.log(err.response));\n\t\t}\n\t}, [userInfo, count]);\n\n\tfunction showTodayHabits() {\n\t\tif (todayHabits) {\n\t\t\treturn (\n\t\t\t\t<Habits>\n\t\t\t\t\t{todayHabits.map((habit, index) => {\n\t\t\t\t\t\tconst { name, done, currentSequence, highestSequence, id } = habit;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<TodayHabit\n\t\t\t\t\t\t\t\ti={index}\n\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\tdone={done}\n\t\t\t\t\t\t\t\tcurrent={currentSequence}\n\t\t\t\t\t\t\t\thighest={highestSequence}\n\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Habits>\n\t\t\t);\n\t\t}\n\t\treturn <></>;\n\t}\n\n\treturn (\n\t\t<Container>\n\t\t\t<Header />\n\t\t\t<Date>{date}</Date>\n\t\t\t<Text count={count}>\n\t\t\t\t{count > 0\n\t\t\t\t\t? `${percentage}% dos hábitos concluídos`\n\t\t\t\t\t: \"Nenhum hábito concluído ainda\"}\n\t\t\t</Text>\n\t\t\t{showTodayHabits()}\n\t\t\t<Footer percentage={percentage} />\n\t\t</Container>\n\t);\n}\n\nexport default Today;\n"]},"metadata":{},"sourceType":"module"}